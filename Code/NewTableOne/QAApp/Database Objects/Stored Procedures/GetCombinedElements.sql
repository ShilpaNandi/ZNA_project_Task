
IF EXISTS (SELECT 1 FROM sysobjects 
	WHERE NAME = 'GetCombinedElements' and TYPE = 'P')
	DROP PROC GetCombinedElements
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

---------------------------------------------------------------------
-----
-----	PROC NAME:		GetCombinedElements
-----
-----	VERSION:		SQL SERVER 2005
-----
-----	AUTHOR :		SUNEEL KUMAR MOGALI
-----
-----	DESCRIPTION:	RETURNS DATA WITH RESPECT TO THE GIVEN INVOICE NUMBER.
-----			
-----	ON EXIT:	
-----			
-----
-----	MODIFIED:	
-----			
----- 
---------------------------------------------------------------------

CREATE PROCEDURE [dbo].[GetCombinedElements]
@ADJNO INT,
@FLAG INT,
@HISTFLAG BIT
AS
BEGIN

-- SET NOCOUNT ON added to prevent extra result sets from interfering with SELECT statements.
SET NOCOUNT ON;

BEGIN TRY

SELECT CASE @FLAG WHEN 1 THEN PREM_ADJ.DRFT_INVC_NBR_TXT 
WHEN 2 THEN PREM_ADJ.FNL_INVC_NBR_TXT 
ELSE PREM_ADJ.DRFT_INVC_NBR_TXT END "INVOICE NUMBER",
PREM_ADJ.FNL_INVC_DT "FINAL DATE",
CASE @FLAG WHEN 1 THEN CONVERT(NVARCHAR(30), DRFT_INVC_DT,101)
 WHEN 2 THEN CONVERT(NVARCHAR(30), FNL_INVC_DT,101)
ELSE  CONVERT(NVARCHAR(30), DRFT_INVC_DT,101) END "INVOICE DATE",
CONVERT(NVARCHAR(30), PREM_ADJ_PGM.STRT_DT, 101) + '-' + CONVERT(NVARCHAR(30), PREM_ADJ_PGM.PLAN_END_DT,101) "PROGRAM PERIOD",
CONVERT(NVARCHAR(30), PREM_ADJ.VALN_DT, 101) "VALUATION DATE",
CUSTMR.FULL_NM "INSURED NAME",
--INT_ORG.FULL_NAME+'/'+INT_ORG.CITY_NM "BU/OFFICE", 
PREM_ADJ_PGM.BRKR_ID "BROKER ID",
EXTRNL_ORG.FULL_NAME "BROKER",
LKUP.LKUP_TXT+'('+CASE WHEN PGMTYP.LKUP_TXT LIKE 'NON-DEP%' THEN 'Retro' ELSE PGMTYP.LKUP_TXT END +')'  "ADJUSTMENT TYPE",
PREM_ADJ_PERD.ADJ_NBR_TXT "ADJUSTMENT NUMBER",
COML_AGMT.POL_SYM_TXT + ' ' + RTRIM(COML_AGMT.POL_NBR_TXT)+ '-' + COML_AGMT.POL_MODULUS_TXT "POLICY NUMBER",
LKUP1.LKUP_TXT "BASIS",
ISNULL(COMB_ELEMTS.AUDT_EXPO_AMT,0) "AUD EXPO",
COMB_ELEMTS.ADJ_RT "RATE",
COMB_ELEMTS.TOT_AMT "GRAND TOTAL",
ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt,0) "CALCULATED MAXIMUM",
CASE WHEN PREM_ADJ_PGM_RETRO.retro_adj_fctr_aplcbl_ind = 0 THEN 
PREM_ADJ_PGM_RETRO.tot_agmt_amt ELSE NULL END "MINIMUM MAXIMUM",
--CASE WHEN PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt > PREM_ADJ_PGM_RETRO.expo_agmt_amt
--THEN PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt ELSE PREM_ADJ_PGM_RETRO.expo_agmt_amt END
--"MAXIMUM",
ISNULL(PREM_ADJ_COMB_ELEMTS.retro_basic_prem_amt,0) "BASIC PREMIUM",
ISNULL(PREM_ADJ_COMB_ELEMTS.retro_los_fctr_amt,0) "LIMIT ALAE LCF LBA AMOUNT",
ISNULL(PREM_ADJ_COMB_ELEMTS.retro_tax_multi_rt,0) "TAX MULTIPLIER",
ISNULL(PREM_ADJ_COMB_ELEMTS.retro_subtot_amt,0) "RETRO SUBTOTAL",
ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_subtot_amt,0) "DEDUCTIBLE SUBTOTAL",
CASE WHEN ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt,0) > (CASE WHEN PREM_ADJ_PGM_RETRO.retro_adj_fctr_aplcbl_ind = 0 THEN 
PREM_ADJ_PGM_RETRO.tot_agmt_amt ELSE NULL END) THEN ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt,0) ELSE (CASE WHEN PREM_ADJ_PGM_RETRO.retro_adj_fctr_aplcbl_ind = 0 THEN 
PREM_ADJ_PGM_RETRO.tot_agmt_amt ELSE NULL END) END "MAXIMUM",
CASE WHEN ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt,0) > (CASE WHEN PREM_ADJ_PGM_RETRO.retro_adj_fctr_aplcbl_ind = 0 THEN 
PREM_ADJ_PGM_RETRO.tot_agmt_amt ELSE NULL END) THEN ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_max_amt,0) ELSE (CASE WHEN PREM_ADJ_PGM_RETRO.retro_adj_fctr_aplcbl_ind = 0 THEN 
PREM_ADJ_PGM_RETRO.tot_agmt_amt ELSE NULL END) END -
(ISNULL(PREM_ADJ_COMB_ELEMTS.retro_subtot_amt,0)+ISNULL(PREM_ADJ_COMB_ELEMTS.dedtbl_subtot_amt,0))
 "MAXIMUM LESS AMOUNT BILLED",
CASE PREM_ADJ_PGM.agmt_aloc_los_adj_exps_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "AGR ALAE",
CASE PREM_ADJ_PGM.agmt_unaloctd_los_adj_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "AGR ULAE",
CASE PREM_ADJ_PGM.agmt_los_base_asses_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "AGR LBA",
CASE PREM_ADJ_PGM.lsi_aloc_los_adj_exps_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "LSI ALAE",
CASE PREM_ADJ_PGM.lsi_unaloctd_los_adj_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "LSI ULAE",
CASE PREM_ADJ_PGM.lsi_los_base_asses_ind WHEN 1 THEN 'Included' WHEN 0 THEN 
'Excluded' END "LSI LBA",
CASE PREM_ADJ_PGM.agmt_paid_incur_ind WHEN 1 THEN 'Paid' WHEN 0 THEN 
'Incurred' END "AGR PAID INCURRED",
ISNULL(PREM_ADJ_COMB_ELEMTS.retro_basic_prem_amt,0) * ISNULL(PREM_ADJ_COMB_ELEMTS.retro_tax_multi_rt,0)
"LESS BASIC PREM TAX MULT",
PREM_ADJ_CMMNT.CMMNT_TXT "COMMENTS",
PREM_ADJ.PREM_ADJ_ID "PREM ADJ ID",
PREM_ADJ_PGM.PREM_ADJ_PGM_ID "PREM ADJ PGM ID"
FROM PREM_ADJ 
INNER JOIN PREM_ADJ_PGM ON PREM_ADJ_PGM.ACTV_IND = 1 
INNER JOIN PREM_ADJ_PERD ON PREM_ADJ_PERD.PREM_ADJ_ID = PREM_ADJ.PREM_ADJ_ID
AND PREM_ADJ_PERD.PREM_ADJ_PGM_ID = PREM_ADJ_PGM.PREM_ADJ_PGM_ID
INNER JOIN CUSTMR ON CUSTMR.CUSTMR_ID = PREM_ADJ_PERD.CUSTMR_ID
INNER JOIN EXTRNL_ORG ON EXTRNL_ORG.EXTRNL_ORG_ID = PREM_ADJ_PGM.BRKR_ID
--INNER JOIN INT_ORG ON INT_ORG.INT_ORG_ID = PREM_ADJ_PGM.BSN_UNT_OFC_ID
INNER JOIN COML_AGMT ON COML_AGMT.PREM_ADJ_PGM_ID = PREM_ADJ_PGM.PREM_ADJ_PGM_ID
AND COML_AGMT.CUSTMR_ID = CUSTMR.CUSTMR_ID AND COML_AGMT.ACTV_IND = 1
INNER JOIN PREM_ADJ_PGM_STS ON PREM_ADJ_PGM_STS.PREM_ADJ_PGM_ID = PREM_ADJ_PGM.PREM_ADJ_PGM_ID
AND PREM_ADJ_PGM_STS.PGM_PERD_STS_TYP_ID = 342 AND PREM_ADJ_PGM_STS.STS_CHK_IND = 1
LEFT OUTER JOIN PREM_ADJ_CMMNT ON PREM_ADJ.prem_adj_id = PREM_ADJ_CMMNT.prem_adj_id
AND PREM_ADJ_CMMNT.PREM_ADJ_PERD_ID = PREM_ADJ_PERD.PREM_ADJ_PERD_ID 
AND PREM_ADJ_CMMNT.CMMNT_CATG_ID = 316
INNER JOIN LKUP on LKUP.LKUP_ID = PREM_ADJ_PGM.PAID_INCUR_TYP_ID
INNER JOIN COMB_ELEMTS ON COMB_ELEMTS.COML_AGMT_ID = COML_AGMT.COML_AGMT_ID
AND COMB_ELEMTS.PREM_ADJ_PGM_ID = PREM_ADJ_PGM.PREM_ADJ_PGM_ID AND 
COMB_ELEMTS.CUSTMR_ID = PREM_ADJ_PERD.CUSTMR_ID AND COMB_ELEMTS.ACTV_IND = 1
INNER JOIN PREM_ADJ_COMB_ELEMTS ON PREM_ADJ_COMB_ELEMTS.PREM_ADJ_PERD_ID =
PREM_ADJ_PERD.PREM_ADJ_PERD_ID AND PREM_ADJ_COMB_ELEMTS.PREM_ADJ_ID =
PREM_ADJ.PREM_ADJ_ID AND PREM_ADJ_COMB_ELEMTS.CUSTMR_ID =PREM_ADJ_PERD.CUSTMR_ID 
INNER JOIN LKUP LKUP1 ON LKUP1.LKUP_ID = COMB_ELEMTS.DVSR_NBR_ID
INNER JOIN PREM_ADJ_PGM_RETRO ON PREM_ADJ_PGM_RETRO.PREM_ADJ_PGM_ID = PREM_ADJ_PGM.PREM_ADJ_PGM_ID
AND PREM_ADJ_PGM_RETRO.CUSTMR_ID = PREM_ADJ_PERD.CUSTMR_ID 
AND PREM_ADJ_PGM_RETRO.RETRO_ELEMT_TYP_ID = 337 
INNER JOIN LKUP PGMTYP ON PGMTYP.LKUP_ID = PREM_ADJ_PGM.PGM_TYP_ID
 WHERE PREM_ADJ.PREM_ADJ_ID =  @ADJNO



END TRY
BEGIN CATCH

	
	SELECT 
    ERROR_NUMBER() AS ERRORNUMBER,
    ERROR_SEVERITY() AS ERRORSEVERITY,
    ERROR_STATE() AS ERRORSTATE,
    ERROR_PROCEDURE() AS ERRORPROCEDURE,
    ERROR_LINE() AS ERRORLINE,
    ERROR_MESSAGE() AS ERRORMESSAGE;


END CATCH
END

GO

IF OBJECT_ID('GetCombinedElements') IS NOT NULL
	PRINT 'CREATED PROCEDURE GetCombinedElements'
ELSE
	PRINT 'FAILED CREATING PROCEDURE GetCombinedElements'
GO

IF OBJECT_ID('GetCombinedElements') IS NOT NULL
	GRANT EXEC ON GetCombinedElements TO PUBLIC
GO










